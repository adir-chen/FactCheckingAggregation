"""
Django settings for FactCheckingAggregation project.

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#!#c&ejot$9bc3k%q&ckib!=ki#lk07!$u3ikfehj6!-2^s)02'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['132.72.23.63', 'localhost', '127.0.0.1', '192.168.1.41', '132.72.66.116']

AUTHENTICATION_BACKENDS = (
    'social_core.backends.open_id.OpenIdAuth',  # for Google authentication
    'social_core.backends.google.GoogleOpenId',  # for Google authentication
    'social_core.backends.google.GoogleOAuth2',  # for Google authentication
    'social_core.backends.twitter.TwitterOAuth',
    'django.contrib.auth.backends.ModelBackend',
)

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '277531460763-6m18k9ls8r9frg59in42hgie89k6cngd.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'Lw_V-kKAsKzNM4yGN0yZeWNK'
SOCIAL_AUTH_TWITTER_KEY = 'vNvM2kjP09HlQnZLYIMe9m6Wm'
SOCIAL_AUTH_TWITTER_SECRET = 'VQ3a30C8H0t9tqlZGgqlDMrdqNdlo37a8owi1AXPGA3BNEFcHn'

LOGIN_URL = '/'
LOGIN_REDIRECT_URL = '/'

# Application definition

INSTALLED_APPS = [
    'claims.apps.ClaimsConfig',
    'comments.apps.CommentsConfig',
    'tweets.apps.TweetsConfig',
    'replies.apps.RepliesConfig',
    'users.apps.UsersConfig',
    'search.apps.SearchConfig',
    'contact_us.apps.ContactUsConfig',
    'logger.apps.LoggerConfig',
    'analytics.apps.AnalyticsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_nose',
    'social_django',
    'mathfilters',
    'vote',
    'social_widgets',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
]

ROOT_URLCONF = 'FactCheckingAggregation.urls'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'wtfactnews@gmail.com'
EMAIL_HOST_PASSWORD = 'amc8dGig'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'FactCheckingAggregation.wsgi.application'
# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'factChecking'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Jerusalem'

USE_I18N = True

USE_L10N = True

# USE_TZ = True

USE_TZ = False
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = '/claims/static/claims/assets/images/'
# Use nose to run all tests
TEST_RUNNER = 'django_nose.NoseTestSuiteRunner'

# Tell nose to measure coverage
NOSE_ARGS = [
    # '--with-coverage',
    # '--cover-package=users',
    # '--cover-package=claims',
    # '--cover-package=comments',
    # '--cover-package=tweets',
    # '--cover-package=contact_us',
    # '--cover-package=logger',
    # '--cover-package=search',
    # '--cover-package=analytics',
    '--detailed-errors',
    '-s',
    # '--cover-html'
]

GOOGLE_RECAPTCHA_V2_SECRET_KEY = '6LdG7JoUAAAAAKQaAFo67f-5fzV6LiXZ-zJomV9V'
GOOGLE_RECAPTCHA_V2_SITE_KEY = '6LdG7JoUAAAAAB8V_dsgqIHEYc-NvE-4PZtfHREz'